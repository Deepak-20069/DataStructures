package CONCEPTS_Day2;
public class Linked_ex 
{
	Node head;

	class Node
	{
		int data;                                                            
		Node next;         
	
		
		Node(int val)                                   
		{
			data=val;
			next=null;
		
		}
	}
	public Linked_ex()
	{
		head=null;
	}
	public void insertAtBegin(int val)
	{
		Node newNode=new Node(val);
		if(head==null)
		{
			head=newNode;
		}
		else
		{
			Node temp=head;
			newNode.next=temp;
			head=newNode;
		}
	}
	public void insertAtAnyPos(int pos,int val)
	{
		Node newNode=new Node(val);
		Node temp=head;
		for(int i=1;i<pos-1;i++)
		{
		temp=temp.next;
        }
		newNode.next=temp.next;
		temp.next=newNode;
	}
	public void DeleteAtBegin()
	{
		head=head.next;
	}
	public void ViewPosition(int mypos)
	{
		Node temp=head;
		System.out.println("Head value"+temp.data);
		for(int i=0;i<mypos-1;i++)
		{
			temp=temp.next;
			System.out.println("Current position value"+temp.data);
		}
	}
	public void DeletePosition(int delpos)
	{
		Node temp=head;
		Node dtemp=null;
		for(int i=0;i<delpos-1;i++)
		{
			dtemp=temp;
			temp=temp.next;
		}
		dtemp.next=temp.next;
	}
	
	public void display()
	{
		Node temp=head;
        while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	public void findMiddle() 
	{
	    if (head==null) 
	    {
	        System.out.println("The list is empty.");
	    }
        Node smid=head;
	    Node fmid=head;
        while (fmid!=null && fmid.next!=null) {
	        smid=smid.next;         
	        fmid=fmid.next.next;    
	    }
	    System.out.println("The middle element is: " + smid.data);
	}

}
