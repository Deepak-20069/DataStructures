package CONCEPTS_Day4;


public class Doubly 
{
	Node head;
	Node tail;
	class Node
	{
		int data;                                                            
		Node next;         
		Node prev;
		
		Node(int val)                                   
		{
			data=val;
			next=null;
			prev=null;
		}
	}
	public Doubly()
	{
		head=null;
	}
	public void insertAtBegin(int val)
	{
		Node newNode=new Node(val);
		if(head==null)
		{
			head=newNode;
		}
		else
		{
			Node temp=head;
			newNode.next=temp;
			head=newNode;
		}
	}
	public void insertAtAnyPos(int pos,int val)
	{
		Node newNode=new Node(val);
		Node temp=head;
		for(int i=1;i<pos-1;i++)
		{
		temp=temp.next;
        }
		newNode.next=temp.next;
		temp.next=newNode;
	}
	public void DoubleinsertAtAnyPos(int pos,int val)
	{
		Node newNode=new Node(val);
		Node temp=head;
		for(int i=1;i<pos-1;i++)
		{
		temp=temp.next;
        }
		newNode.next=temp.next;
		temp.next=newNode;
		
	}
	public void DeleteAtBegin()
	{
		head=head.next;
	}
	public void DoubleinsertAtBegin(int val)
	{
		Node newNode=new Node(val);
		if(head==null)
		{
			head=newNode;
			tail=newNode;
		}
		else
		{
			Node temp=head;
			newNode.next=temp;
			head=newNode;
			temp.prev=newNode;		}
	}
	public void ViewPosition(int mypos)
	{
		Node temp=head;
		System.out.println("Head value"+temp.data);
		for(int i=0;i<mypos-1;i++)
		{
			temp=temp.next;
			System.out.println("Current position value"+temp.data);
		}
	}
	public void DeletePosition(int delpos)
	{
		Node temp=head;
		Node dtemp=null;
		for(int i=0;i<delpos-1;i++)
		{
			dtemp=temp;
			temp=temp.next;
		}
		dtemp.next=temp.next;
	}
	
	public void display()
	{
		Node temp=head;
        while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	public void displayUsingprev()
	{
		Node temp=head;
        while(temp!=null)
		{
			System.out.print(temp.data+" ");
			temp=temp.next;
		}
	}
	
	public static void main (String[]args)
	{
		Doubly l=new Doubly();
		l.DoubleinsertAtBegin(67);
		l.DoubleinsertAtBegin(79);
		l.DoubleinsertAtBegin(89);
		l.DoubleinsertAtBegin(220);
		l.DoubleinsertAtBegin(33);
		l.DoubleinsertAtBegin(104);
		l.DoubleinsertAtBegin(777);
		l.display();
		System.out.println();
		l.displayUsingprev();
		l.DoubleinsertAtAnyPos(4, 3333);
		l.display();
	}

}
